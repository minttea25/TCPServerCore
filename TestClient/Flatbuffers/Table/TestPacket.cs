// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Test
{

    using global::System;
    using global::System.Collections.Generic;
    using global::Google.FlatBuffers;

    public struct TestPacket : IFlatbufferObject
    {
        private Table __p;
        public ByteBuffer ByteBuffer { get { return __p.bb; } }
        public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_7(); }
        public static TestPacket GetRootAsTestPacket(ByteBuffer _bb) { return GetRootAsTestPacket(_bb, new TestPacket()); }
        public static TestPacket GetRootAsTestPacket(ByteBuffer _bb, TestPacket obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public static bool VerifyTestPacket(ByteBuffer _bb) { Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, TestPacketVerify.Verify); }
        public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
        public TestPacket __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

        public string Msg { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMsgBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
        public ArraySegment<byte>? GetMsgBytes() { return __p.__vector_as_arraysegment(4); }
#endif
        public byte[] GetMsgArray() { return __p.__vector_as_array<byte>(4); }
        public int Number { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

        public static Offset<Test.TestPacket> CreateTestPacket(FlatBufferBuilder builder,
            StringOffset msgOffset = default(StringOffset),
            int number = 0)
        {
            builder.StartTable(2);
            TestPacket.AddNumber(builder, number);
            TestPacket.AddMsg(builder, msgOffset);
            return TestPacket.EndTestPacket(builder);
        }

        public static void StartTestPacket(FlatBufferBuilder builder) { builder.StartTable(2); }
        public static void AddMsg(FlatBufferBuilder builder, StringOffset msgOffset) { builder.AddOffset(0, msgOffset.Value, 0); }
        public static void AddNumber(FlatBufferBuilder builder, int number) { builder.AddInt(1, number, 0); }
        public static Offset<Test.TestPacket> EndTestPacket(FlatBufferBuilder builder)
        {
            int o = builder.EndTable();
            return new Offset<Test.TestPacket>(o);
        }
        public static void FinishTestPacketBuffer(FlatBufferBuilder builder, Offset<Test.TestPacket> offset) { builder.Finish(offset.Value); }
        public static void FinishSizePrefixedTestPacketBuffer(FlatBufferBuilder builder, Offset<Test.TestPacket> offset) { builder.FinishSizePrefixed(offset.Value); }
    }


    static public class TestPacketVerify
    {
        static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
        {
            return verifier.VerifyTableStart(tablePos)
              && verifier.VerifyString(tablePos, 4 /*Msg*/, false)
              && verifier.VerifyField(tablePos, 6 /*Number*/, 4 /*int*/, 4, false)
              && verifier.VerifyTableEnd(tablePos);
        }
    }

}
